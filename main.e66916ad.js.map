{"version":3,"sources":["scripts/main.js"],"names":["list","document","body","querySelector","employees","children","Employee","boss","position","salary","age","name","validateSalary","string","dataset","substring","replaceAll","sortList","resultString","sort","a","b","Number","li","toString","innerText","innerHTML","getEmployees","employeesArray","employee","push"],"mappings":"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","file":"main.e66916ad.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.body.querySelector('ul');\nconst employees = [ ...list.children ];\n\nclass Employee {\n  constructor(boss, position, salary, age) {\n    this.name = boss;\n    this.position = position;\n    this.salary = salary;\n    this.age = age;\n  }\n}\n\nfunction validateSalary(string) {\n  return string.dataset.salary.substring(1).replaceAll(',', '');\n}\n\nfunction sortList() {\n  let resultString = '';\n\n  employees.sort((a, b) => {\n    return Number(validateSalary(b)) - Number(validateSalary(a));\n  });\n\n  for (const li of employees) {\n    resultString += `\n    <li\n      data-position=${li.dataset.position}\n      data-salary=${li.dataset.salary.toString()}\n      data-age=${li.dataset.age}\n    >\n      ${li.innerText}\n    </li>\n    `;\n  }\n\n  list.innerHTML = resultString;\n}\n\nfunction getEmployees() {\n  const employeesArray = [];\n\n  for (const li of employees) {\n    const employee = new Employee(li.innerText, li.dataset.position,\n      li.dataset.salary, li.dataset.age);\n\n    employeesArray.push(employee);\n  }\n\n  return employeesArray;\n}\n\nsortList();\ngetEmployees();\n"]}